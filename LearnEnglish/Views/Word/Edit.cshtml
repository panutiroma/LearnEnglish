@model Domain.Word

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Word"))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Word</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Word", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                <input type="submit" value="Generate" name="generate" class="btn btn-default"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UkPhonic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UkPhonic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UkPhonic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UkPronunciationUrl, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UkPronunciationUrl, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UkPronunciationUrl, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UsPhonic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UsPhonic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UsPhonic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsPronunciationUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UsPronunciationUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UsPronunciationUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Translation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Translation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Translation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
